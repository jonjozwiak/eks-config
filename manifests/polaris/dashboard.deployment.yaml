apiVersion: apps/v1
kind: Deployment
metadata:
  name: polaris-dashboard
  namespace: polaris
  labels:
    app: polaris
    component: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polaris
      component: dashboard
  template:
    metadata:
      annotations:
        checksum/config: '8aa5a565fba7a2db98d46752087de8c1dcc83b70cd762c5829d5ba01270d54a2'
      labels:
        app: polaris
        component: dashboard
    spec:
      volumes:
      - name: config
        configMap:
          name: polaris
      containers:
      - command:
        - polaris
        - --dashboard
        - --config
        - /opt/app/config.yaml
        image: 'quay.io/fairwinds/polaris:0.6'
        imagePullPolicy: 'Always'
        name: dashboard
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: config
          mountPath: /opt/app/config.yaml
          subPath: config.yaml
          readOnly: true
      serviceAccountName: polaris-dashboard
      nodeSelector:
      tolerations:
